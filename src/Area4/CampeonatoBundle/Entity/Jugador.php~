<?php

namespace Area4\CampeonatoBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Area4\CampeonatoBundle\Entity\Jugador
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Area4\CampeonatoBundle\Entity\JugadorRepository")
 * @ORM\HasLifecycleCallbacks()
 */
class Jugador {

	/**
	 * @var integer $id
	 *
	 * @ORM\Column(name="id", type="integer")
	 * @ORM\Id
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	private $id;

	/**
	 * @var string $nombre
	 *
	 * @ORM\Column(name="nombre", type="string", length=60)
	 */
	private $nombre;

	/**
	 * @var string $apellido
	 *
	 * @ORM\Column(name="apellido", type="string", length=60)
	 */
	private $apellido;

	/**
	 * @var string $direccion
	 *
	 * @ORM\Column(name="direccion", type="string", length=100)
	 */
	private $direccion;

        /**
	 * @var string $foto
	 *
	 * @ORM\Column(name="foto", type="string", length=999999, nullable="true")
	 */
	private $foto;

	/**
	 * @var string $dni
	 *
	 * @ORM\Column(name="dni", type="string", unique="true", length=10)
	 */
	private $dni;

	/**
	 * @var string $telefono
	 *
	 * @ORM\Column(name="telefono", type="string", length=20)
	 */
	private $telefono;

	/**
	 * @var date $fechanac
	 *
	 * @ORM\Column(name="fechanac", type="date")
	 */
	private $fechanac;

	/**
	 * @ORM\ManyToMany(targetEntity="Equipo", inversedBy="Jugadores")
	 * @ORM\JoinTable(name="equipo_jugador",
	 *      joinColumns={@ORM\JoinColumn(name="jugador_id", referencedColumnName="id")},
	 *      inverseJoinColumns={@ORM\JoinColumn(name="equipo_id", referencedColumnName="id")}
	 *  
	 *      )
	 * @ORM\OrderBy({"nombre" = "ASC"})
	 * Columns={@ ORM\Column(name="inicio", type="datetime", nullable="true"),@ ORM\Column(name="fin", type="datetime", nullable="true")}
	 * Assert\Choice('multiple'=false)
	 */
	private $Equipo;

	/**
	 * @ORM\ManyToMany(targetEntity="Categoria", inversedBy="Jugador")
	 * @ORM\JoinTable(name="Jugador_Categoria",
	 *      joinColumns={@ORM\JoinColumn(name="jugador_id", referencedColumnName="id")},
	 *      inverseJoinColumns={@ORM\JoinColumn(name="categoria_id", referencedColumnName="id")}
	 *      )
	 * Assert\Choice(callback = "getCategoria")
	 */
	private $Categoria;

	/**
	 * @ORM\ManyToMany(targetEntity="Partido", mappedBy="Jugador")
	 */
	private $Partido;

	/**
	* @ORM\ManyToOne(targetEntity="\Area4\ContableBundle\Entity\GrupoFamiliar")
	*/
	private $GrupoFamiliar;

	/**
	 * @ORM\Column(name="carnet", type="string", length="10", nullable="true")
	 * @var $carnet string
	 */
	private $carnet;
	
	/**
 * @ORM\Column(name="ocupacion", type="string", length="100", nullable="true")
 * @var $ocupacion string
 */
 
 private $ocupacion;
 
 /**
 * @ORM\Column(name="facebook", type="string", length="100", nullable="true")
 * @var $facebook string
 */
 
 private $facebook;
 
 /**
 * @ORM\Column(name="sexo", type="integer", nullable="true")
 * @var $sexo string
 */
 private $sexo;
 
 /**
 * @ORM\Column(name="email", type="string", length="100", nullable="true")
 * @var $email string
 */
 private $email;
 
 /**
 * @ORM\Column(name="observaciones", type="text", nullable="true")
 * @var $observaciones text
 */
 
 private $observaciones;

 /**
 * @ORM\Column(name="color", type="string", nullable="true")
 * @var $color string
 */

 private $color;

 /**
 * @ORM\Column(name="bloque", type="string", nullable="true", length="2")
 * @var $bloque string
 */

 private $bloque;

 /**
 * @ORM\Column(name="created_at", type="datetime", nullable="true")
 * @var $creado date
 */

 private $creado;

 /**
 * @ORM\Column(name="updated_at", type="datetime", nullable="true")
 * @var $actualizado date
 */

 private $actualizado;

	/**
	 * Get id
	 *
	 * @return integer 
	 */
	public function getId() {
		return $this->id;
	}

	/**
	 * Set nombre
	 *
	 * @param string $nombre
	 */
	public function setNombre($nombre) {
		$this->nombre = $nombre;
	}

	/**
	 * Get nombre
	 *
	 * @return string 
	 */
	public function getNombre() {
		return $this->nombre;
	}

	/**
	 * Set apellido
	 *
	 * @param string $apellido
	 */
	public function setApellido($apellido) {
		$this->apellido = $apellido;
	}

	/**
	 * Get apellido
	 *
	 * @return string 
	 */
	public function getApellido() {
		return $this->apellido;
	}

	/**
	 * Set direccion
	 *
	 * @param string $direccion
	 */
	public function setDireccion($direccion) {
		$this->direccion = $direccion;
	}

	/**
	 * Get direccion
	 *
	 * @return string 
	 */
	public function getDireccion() {
		return $this->direccion;
	}

	/**
	 * Set dni
	 *
	 * @param string $dni
	 */
	public function setDni($dni) {
		$this->dni = $dni;
	}

	/**
	 * Get dni
	 *
	 * @return string 
	 */
	public function getDni() {
		return $this->dni;
	}

	/**
	 * Set telefono
	 *
	 * @param string $telefono
	 */
	public function setTelefono($telefono) {
		$this->telefono = $telefono;
	}

	/**
	 * Get telefono
	 *
	 * @return string 
	 */
	public function getTelefono() {
		return $this->telefono;
	}

	/**
	 * Set fechanac
	 *
	 * @param date $fechanac
	 */
	public function setFechanac($fechanac) {
		$this->fechanac = $fechanac;
	}

	/**
	 * Get fechanac
	 *
	 * @return date 
	 */
	public function getFechanac() {
		return $this->fechanac;
	}

	/**
	 * Set Equipo
	 *
	 * @param Area4\CampeonatoBundle\Entity\Equipo $equipo
	 */
	public function setEquipo(\Area4\CampeonatoBundle\Entity\Equipo $equipo) {
		$this->Equipo[] = $equipo;
	}

	/**
	 * Get Equipo
	 *
	 * @return Area4\CampeonatoBundle\Entity\Equipo 
	 */
	public function getEquipo() {
		return $this->Equipo;
	}

	/**
	 * Set Categoria
	 *
	 * @param Area4\CampeonatoBundle\Entity\Categoria $categoria
	 */
	public function setCategoria( $categoria) {
		$this->Categoria = $categoria;
	}

	/**
	 * Get Categoria
	 *
	 * @return Area4\CampeonatoBundle\Entity\Categoria 
	 */
	public function getCategoria() {
		return $this->Categoria;
	}

	public function __construct() {
		$this->Equipo = new \Doctrine\Common\Collections\ArrayCollection();
		$this->Categoria = new \Doctrine\Common\Collections\ArrayCollection();
		$this->Partido = new \Doctrine\Common\Collections\ArrayCollection();
	}

	/**
	 * Add equipo
	 *
	 * @param Area4\CampeonatoBundle\Entity\Equipo $equipo
	 */
	public function addEquipo(\Area4\CampeonatoBundle\Entity\Equipo $equipo) {
		$this->Equipo[] = $equipo;
	}

	/**
	 * Add Categoria
	 *
	 * @param Area4\CampeonatoBundle\Entity\Categoria $categoria
	 */
	public function addCategoria(\Area4\CampeonatoBundle\Entity\Categoria $categoria) {
		$this->Categoria[] = $categoria;
	}


    /**
     * Set carnet
     *
     * @param string $carnet
     */
    public function setCarnet($carnet)
    {
        $this->carnet = $carnet;
    }

    /**
     * Get carnet
     *
     * @return string 
     */
    public function getCarnet()
    {
        return $this->carnet;
    }

    /**
     * Set ocupacion
     *
     * @param string $ocupacion
     */
    public function setOcupacion($ocupacion)
    {
        $this->ocupacion = $ocupacion;
    }

    /**
     * Get ocupacion
     *
     * @return string 
     */
    public function getOcupacion()
    {
        return $this->ocupacion;
    }

    /**
     * Set facebook
     *
     * @param string $facebook
     */
    public function setFacebook($facebook)
    {
        $this->facebook = $facebook;
    }

    /**
     * Get facebook
     *
     * @return string 
     */
    public function getFacebook()
    {
        return $this->facebook;
    }

    /**
     * Set observaciones
     *
     * @param text $observaciones
     */
    public function setObservaciones($observaciones)
    {
        $this->observaciones = $observaciones;
    }

    /**
     * Get observaciones
     *
     * @return text 
     */
    public function getObservaciones()
    {
        return $this->observaciones;
    }
    
    public function __toString(){
        return $this->dni.' - '.$this->apellido.' '.$this->nombre;
    }

    public function setSexo($sexo){
        $this->sexo = $sexo;
    }
    
    public function getSexo(){
        return $this->sexo;
    }
    
    public function setEmail($email){
        $this->email = $email;
    }

    public function getEmail(){
        return $this->email;
    }

    public function setFoto($foto){
        $this->foto = $foto;
    }

    public function getFoto(){
        return $this->foto;
    }

    public function setColor($color){
        $this->color=$color;
    }

    /**
     *
     * @return String
     */
    public function getColor(){
        return $this->color;
    }

    /**
     * 
     * @param String $bloque
     */
    public function setBloque($bloque){
        $this->bloque = $bloque;
    }

    /**
     * Bloque en el que juega el jugador
     * @return String
     */
    public function getBloque(){
        return $this->bloque;
    }

    /* Manejo de Archivo */
    protected $path="";

    public function setPath($param) {
		$this->path = $param;
    }
    public function getPath() {
		return $this->path;
    }

    protected function getUploadRootDir() {
            return $this->path;
    }

    public function upload($path){
        // la propiedad 'file' puede estar vacía si el campo no es obligatorio
        if (null === $this->foto) {
                return;
        }

        // aquí utilizamos el nombre de archivo original pero lo deberías
        // desinfectar por lo menos para evitar cualquier problema de seguridad
        // 'move' toma el directorio y nombre de archivo destino al cual trasladarlo
        $extension = $this->foto->guessExtension();
        if (!$extension) {
            // no puede adivinar la extensión
            $extension = 'jpg';
        }

        $this->foto->move($path, $this->getDni().'.'.$extension);

        // fija la propiedad 'path' al nombre de archivo donde se guardó el archivo
        $this->setFoto($this->getPath().'/'.$this->getDni().'.'.$extension);

        // limpia la propiedad 'file' puesto que ya no la vas a necesitar
        //	unset($this->foto);
    }

    /**
     * Realiza antes de crear
     * @ORM\PrePersist()
     */
    public function prePersist(){
        $this->creado = new \Datetime();
        $this->actualizado = new \Datetime();
    }

    /**
     * @ORM\PreUpdate()
     */
    public function preUpdate(){
        $this->actualizado = new \Datetime();
    }

    /**
     * Set creado
     *
     * @param datetime $creado
     */
    public function setCreado($creado)
    {
        $this->creado = $creado;
    }

    /**
     * Get creado
     *
     * @return datetime 
     */
    public function getCreado()
    {
        return $this->creado;
    }

    /**
     * Set actualizado
     *
     * @param datetime $actualizado
     */
    public function setActualizado($actualizado)
    {
        $this->actualizado = $actualizado;
    }

    /**
     * Get actualizado
     *
     * @return datetime 
     */
    public function getActualizado()
    {
        return $this->actualizado;
    }

    /**
     * Add Partido
     *
     * @param Area4\CampeonatoBundle\Entity\Partido $partido
     */
    public function addPartido(\Area4\CampeonatoBundle\Entity\Partido $partido)
    {
        $this->Partido[] = $partido;
    }

    /**
     * Get Partido
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getPartido()
    {
        return $this->Partido;
    }

    /* aca gf 
	j = manytoone
    */

    /**
     * Add GrupoFamiliar
     *
     * @param Area4\ContableBundle\Entity\GrupoFamiliar $grupoFamiliar
     */
    public function addGrupoFamiliar(\Area4\ContableBundle\Entity\GrupoFamiliar $grupoFamiliar)
    {
        $this->GrupoFamiliar[] = $grupoFamiliar;
    }

    /**
     * Get GrupoFamiliar
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getGrupoFamiliar()
    {
        return $this->GrupoFamiliar;
    }
}